{"version":3,"sources":["components/Header/Header.module.scss","App.module.scss","components/Common/Preloader/Preloader.module.scss","components/Current/Current.module.scss","api.ts","redux/currenciesReducer.ts","redux/listReducer.ts","redux/store.ts","components/Common/Preloader/Preloader.tsx","components/Current/CurrencyForm.tsx","components/Current/Current.tsx","components/List/ListForm.tsx","components/List/List.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","api","get","then","res","data","first","second","initialState","isFetching","allCurrencies","firstCurrency","secondCurrency","rate","amount","actions","type","onGetAllCurrencies","dispatch","a","currenciesData","Object","values","results","rootReducer","combineReducers","currencies","state","action","list","store","createStore","applyMiddleware","thunk","window","__store__","Preloader","memo","className","s","lds_roller","CurrencyForm","getRate","form","enableReinitialize","initialValues","id","onSubmit","setSubmitting","localStorage","setItem","isSubmitting","as","name","map","el","title","currencyName","button","disabled","Current","useSelector","useDispatch","useEffect","length","localCurrentCurrencies","getItem","localCurrentAmount","split","current","formWhrapper","min","max","value","onChange","e","setAmount","currentTarget","rateData","onGetRate","infoWhrapper","info","Math","round","ListForm","List","localListCurrency","localListAmount","getState","Header","header","Navigation","navigation","navigator","link","activeClassName","active","replace","to","href","SVGs","display","viewBox","d","App","app","main","path","render","exact","CurrenciesApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af267ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"navigation\":\"Header_navigation__21e3H\",\"navigator\":\"Header_navigator__7FmRV\",\"link\":\"Header_link__1uLZ-\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_roller\":\"Preloader_lds_roller__2RD8m\",\"lds-roller\":\"Preloader_lds-roller__jW5PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"Current_current__3wJ4D\",\"formWhrapper\":\"Current_formWhrapper__3g5ZN\",\"amount\":\"Current_amount__2qJ87\",\"button\":\"Current_button__thE6c\",\"info\":\"Current_info__99YOn\"};","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://free.currconv.com/api/v7/'\n})\n\nexport const api = {\n    getAllCurrencies() {\n        return instance.get('currencies?apiKey=7caa1d0e46573ad874cf').then(res => res.data)\n    },\n    getRate(first: string, second: string) {\n        return instance.get(`convert?q=${first}_${second}&compact=ultra&apiKey=7caa1d0e46573ad874cf`).then(res => res.data)\n    },\n}","import { api } from \"../api\"\nimport { CurrencyType } from \"../types\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    // Common\n    isFetching: false,\n    // Main\n    allCurrencies: [] as Array<CurrencyType>,\n    firstCurrency: '',\n    secondCurrency: '',\n    rate: null as null | number,\n    amount: 1\n}\n\nexport const currenciesReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // Common\n        case 'C/CURRENCIES/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        // Main\n        case 'C/CURRENCIES/SET_ALL_CURRENCIES':\n            return {\n                ...state,\n                allCurrencies: action.allCurrencies\n            }\n        case 'C/CURRENCIES/SET_FIRST_CURRENCY':\n            return {\n                ...state,\n                firstCurrency: action.firstCurrency\n            }\n        case 'C/CURRENCIES/SET_SECOND_CURRENCY':\n            return {\n                ...state,\n                secondCurrency: action.secondCurrency\n            }\n        case 'C/CURRENCIES/SET_RATE':\n            return {\n                ...state,\n                rate: action.rate\n            }\n        case 'C/CURRENCIES/SET_AMOUNT':\n            return {\n                ...state,\n                amount: action.amount\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Common\n    setIsFetching: (isFetching: boolean) => ({ type: 'C/CURRENCIES/TOGGLE_IS_FETCHING', isFetching } as const),\n    // Main\n    setAllCurrencies: (allCurrencies: Array<CurrencyType>) => ({ type: 'C/CURRENCIES/SET_ALL_CURRENCIES', allCurrencies } as const),\n    setFirstCurrency: (firstCurrency: string) => ({ type: 'C/CURRENCIES/SET_FIRST_CURRENCY', firstCurrency } as const),\n    setSecondCurrency: (secondCurrency: string) => ({ type: 'C/CURRENCIES/SET_SECOND_CURRENCY', secondCurrency } as const),\n    setRate: (rate: number) => ({ type: 'C/CURRENCIES/SET_RATE', rate } as const),\n    setAmount: (amount: number) => ({ type: 'C/CURRENCIES/SET_AMOUNT', amount } as const),\n}\n\nexport const onGetAllCurrencies = (): ThunkType => async dispatch => {\n    dispatch(actions.setIsFetching(true))\n    const currenciesData = await api.getAllCurrencies()\n    dispatch(actions.setAllCurrencies(Object.values(currenciesData.results)))\n    dispatch(actions.setIsFetching(false))\n}\n\nexport const onGetRate = (first: string, second: string): ThunkType => async dispatch => {\n    dispatch(actions.setIsFetching(true))\n    dispatch(actions.setFirstCurrency(first))\n    dispatch(actions.setSecondCurrency(second))\n    const rateData = await api.getRate(first, second)\n    dispatch(actions.setRate(Object.values(rateData)[0] as number))\n\n    dispatch(actions.setIsFetching(false))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import { api } from \"../api\"\nimport { BaseThunkType, InferActionsTypes } from \"./store\"\n\nconst initialState = {\n    // Common\n    isFetching: false,\n    // Main\n    firstCurrency: '',\n    secondCurrency: 'UAH',\n    rate: null as null | number,\n    amount: 1\n}\n\nexport const listReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // Common\n        case 'C/LIST/TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        // Main\n        case 'C/LIST/SET_FIRST_CURRENCY':\n            return {\n                ...state,\n                firstCurrency: action.firstCurrency\n            }\n        case 'C/LIST/SET_RATE':\n            return {\n                ...state,\n                rate: action.rate\n            }\n        case 'C/LIST/SET_AMOUNT':\n            return {\n                ...state,\n                amount: action.amount\n            }\n        default: return state\n    }\n}\n\nexport const actions = {\n    // Common\n    setIsFetching: (isFetching: boolean) => ({ type: 'C/LIST/TOGGLE_IS_FETCHING', isFetching } as const),\n    // Main\n    setFirstCurrency: (firstCurrency: string) => ({ type: 'C/LIST/SET_FIRST_CURRENCY', firstCurrency } as const),\n    setRate: (rate: number) => ({ type: 'C/LIST/SET_RATE', rate } as const),\n    setAmount: (amount: number) => ({ type: 'C/LIST/SET_AMOUNT', amount } as const),\n}\n\nexport const onGetRate = (first: string): ThunkType => async (dispatch, getState) => {\n    const second = getState().list.secondCurrency\n    dispatch(actions.setIsFetching(true))\n    dispatch(actions.setFirstCurrency(first))\n    const rateData = await api.getRate(first, second)\n    dispatch(actions.setRate(Object.values(rateData)[0] as number))\n\n    dispatch(actions.setIsFetching(false))\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk, { ThunkAction } from 'redux-thunk'\nimport { currenciesReducer } from './currenciesReducer'\nimport { listReducer } from './listReducer'\n\nconst rootReducer = combineReducers({\n    currencies: currenciesReducer,\n    list: listReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n// @ts-ignore\nwindow.__store__ = store\n\ntype RootReducerType = typeof rootReducer // (globalstate: GLOBALSTATE) => GLOBALSTATE\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>","import { memo } from 'react'\nimport s from './Preloader.module.scss'\n\nexport const Preloader: React.FC = memo(() => {\n    return (\n        <div className={s.lds_roller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n})","import s from './Current.module.scss'\nimport { memo } from \"react\"\nimport { CurrencyType } from \"../../types\"\nimport { Field, Form, Formik } from 'formik'\n\ntype PropsType = {\n    allCurrencies: Array<CurrencyType>\n    first: string\n    second: string\n    getRate: (first: string, second: string) => void\n}\n\ntype FormType = {\n    first: string\n    second: string\n}\n\nexport const CurrencyForm: React.FC<PropsType> = memo(({ allCurrencies, getRate, first, second }) => {\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        getRate(values.first, values.second)\n        localStorage.setItem('currentCurrencies', `${values.first}, ${values.second}`)\n        setSubmitting(false)\n    }\n\n    return <div className={s.form}>\n        <Formik\n            enableReinitialize\n            initialValues={{ first: first ? first : allCurrencies[0].id, second: second ? second : allCurrencies[0].id }}\n            onSubmit={submit}\n        >\n            {({ isSubmitting }) => (\n                <Form>\n                    <Field as=\"select\" name=\"first\">\n                        {allCurrencies.map(el => <option title={el.currencyName} key={el.id}>{el.id}</option>)}\n                    </Field>\n                    <Field as=\"select\" name=\"second\">\n                        {allCurrencies.map(el => <option key={el.id}>{el.id}</option>)}\n                    </Field>\n                    <button className={s.button} type=\"submit\" disabled={isSubmitting}>Get</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n})","import s from './Current.module.scss'\nimport { AppStateType } from './../../redux/store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, onGetAllCurrencies, onGetRate } from './../../redux/currenciesReducer'\nimport { memo, useEffect } from 'react'\nimport { Preloader } from './../Common/Preloader/Preloader'\nimport { CurrencyForm } from './CurrencyForm'\n\nexport const Current: React.FC = memo(() => {\n    const isFetching = useSelector((state: AppStateType) => state.currencies.isFetching)\n    const allCurrencies = useSelector((state: AppStateType) => state.currencies.allCurrencies)\n    const rate = useSelector((state: AppStateType) => state.currencies.rate)\n    const amount = useSelector((state: AppStateType) => state.currencies.amount)\n    const firstCurrency = useSelector((state: AppStateType) => state.currencies.firstCurrency)\n    const secondCurrency = useSelector((state: AppStateType) => state.currencies.secondCurrency)\n\n    const dispatch = useDispatch()\n\n    const setAmount = (amount: number) => {\n        dispatch(actions.setAmount(amount))\n        localStorage.setItem('currentAmount', `${amount}`)\n    }\n\n    useEffect(() => {\n        if (allCurrencies.length === 0) {\n            dispatch(onGetAllCurrencies())\n        }\n    }, [dispatch, allCurrencies])\n\n    const getRate = (first: string, second: string) => { dispatch(onGetRate(first, second)) }\n\n    const localCurrentCurrencies = localStorage.getItem('currentCurrencies')\n    const localCurrentAmount = localStorage.getItem('currentAmount')\n\n    // LocalStorage\n    useEffect(() => {\n        if (localCurrentCurrencies === null) {\n            localStorage.setItem('currentCurrencies', `${allCurrencies[0].id}, ${allCurrencies[0].id}`)\n        } else {\n            dispatch(actions.setFirstCurrency(localCurrentCurrencies.split(', ')[0]))\n            dispatch(actions.setSecondCurrency(localCurrentCurrencies.split(', ')[1]))\n        }\n        localCurrentAmount === null ? localStorage.setItem('currentAmount', `${amount}`)\n            : dispatch(actions.setAmount(+localCurrentAmount))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return <div className={s.current}>\n        <div className={s.formWhrapper}>\n            <input className={s.amount} type=\"number\" min=\"1\" max=\"999999\" value={amount} onChange={(e) => { setAmount(+e.currentTarget.value) }} />\n            <CurrencyForm allCurrencies={allCurrencies} getRate={getRate} first={firstCurrency} second={secondCurrency} />\n        </div>\n        {isFetching ? <Preloader /> : <div className={s.infoWhrapper}>\n            {rate === null\n                ? <p className={s.info}>Press get to see currency</p>\n                : <p className={s.info}>{amount} {firstCurrency} = {Math.round(amount * rate * 100) / 100} {secondCurrency}</p>\n            }\n        </div>}\n    </div>\n})","import s from './../Current/Current.module.scss'\nimport { memo } from \"react\"\nimport { CurrencyType } from \"../../types\"\nimport { Field, Form, Formik } from 'formik'\n\ntype PropsType = {\n    allCurrencies: Array<CurrencyType>\n    first: string\n    second: string\n    getRate: (first: string) => void\n}\ntype FormType = {\n    first: string\n}\n\nexport const ListForm: React.FC<PropsType> = memo(({ allCurrencies, getRate, first, second }) => {\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        getRate(values.first)\n        localStorage.setItem('listCurrency', values.first)\n        setSubmitting(false)\n    }\n\n    return <div className={s.form}>\n        <Formik\n            enableReinitialize\n            initialValues={{ first: first ? first : allCurrencies[0].id, second: second }}\n            onSubmit={submit}\n        >\n            {({ isSubmitting }) => (\n                <Form>\n                    <Field as=\"select\" name=\"first\">\n                        {allCurrencies.map(el => <option title={el.currencyName} key={el.id}>{el.id}</option>)}\n                    </Field>\n                    <button className={s.button} type=\"submit\" disabled={isSubmitting}>to UAH</button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n})","import s from './../Current/Current.module.scss'\nimport { AppStateType } from '../../redux/store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, onGetRate } from '../../redux/listReducer'\nimport { onGetAllCurrencies } from '../../redux/currenciesReducer'\nimport { memo, useEffect } from 'react'\nimport { Preloader } from '../Common/Preloader/Preloader'\nimport { ListForm } from './ListForm'\n\nexport const List: React.FC = memo(() => {\n    const isFetching = useSelector((state: AppStateType) => state.list.isFetching)\n    const allCurrencies = useSelector((state: AppStateType) => state.currencies.allCurrencies)\n    const rate = useSelector((state: AppStateType) => state.list.rate)\n    const amount = useSelector((state: AppStateType) => state.list.amount)\n    const firstCurrency = useSelector((state: AppStateType) => state.list.firstCurrency)\n    const secondCurrency = useSelector((state: AppStateType) => state.list.secondCurrency)\n\n    const dispatch = useDispatch()\n\n    const setAmount = (amount: number) => {\n        dispatch(actions.setAmount(amount))\n        localStorage.setItem('listAmount', `${amount}`)\n    }\n\n    useEffect(() => {\n        if (allCurrencies.length === 0) {\n            dispatch(onGetAllCurrencies())\n        }\n    }, [dispatch, allCurrencies])\n\n    const getRate = (first: string) => { dispatch(onGetRate(first)) }\n\n    const localListCurrency = localStorage.getItem('listCurrency')\n    const localListAmount = localStorage.getItem('listAmount')\n\n    useEffect(() => {\n        localListCurrency === null ? localStorage.setItem('listCurrency', `${allCurrencies[0].id}`) : dispatch(actions.setFirstCurrency(localListCurrency))\n        localListAmount === null ? localStorage.setItem('listAmount', `${amount}`) : dispatch(actions.setAmount(+localListAmount))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return <div className={s.current}>\n        <div className={s.formWhrapper}>\n            <input className={s.amount} type=\"number\" min=\"1\" max=\"999999\" value={amount} onChange={(e) => { setAmount(+e.currentTarget.value) }} />\n            <ListForm allCurrencies={allCurrencies} getRate={getRate} first={firstCurrency} second={secondCurrency} />\n        </div>\n        {isFetching ? <Preloader /> : <div className={s.infoWhrapper}>\n            {rate === null\n                ? <p className={s.info}>Convert to UAH</p>\n                : <p className={s.info}>{amount} {firstCurrency} = {Math.round(amount * rate * 100) / 100} {secondCurrency}</p>\n            }\n        </div>}\n    </div>\n})","import s from './Header.module.scss'\nimport { NavLink } from 'react-router-dom'\n\nexport const Header: React.FC = () => {\n    return <header className={s.header}>\n        <Navigation />\n    </header>\n}\n\nconst Navigation: React.FC = () => {\n    return <nav className={s.navigation}>\n        <SVGs />\n        <div className={s.navigator}>\n            <NavLink title=\"current\" className={s.link} activeClassName={s.active} replace to=\"/current\">\n                <svg><use href=\"#current\"></use></svg>\n            </NavLink>\n        </div>\n        <div className={s.navigator}>\n            <NavLink title=\"list\" className={s.link} activeClassName={s.active} replace to=\"/list\">\n                <svg><use href=\"#list\"></use></svg>\n            </NavLink>\n        </div>\n    </nav>\n}\n\nconst SVGs: React.FC = () => {\n    return <svg display=\"none\" >\n        <symbol id=\"list\" viewBox=\"0 0 20 20\">\n            <path d=\"M18.092,5.137l-3.977-1.466h-0.006c0.084,0.042-0.123-0.08-0.283,0H13.82L10,5.079L6.178,3.671H6.172c0.076,0.038-0.114-0.076-0.285,0H5.884L1.908,5.137c-0.151,0.062-0.25,0.207-0.25,0.369v10.451c0,0.691,0.879,0.244,0.545,0.369l3.829-1.406l3.821,1.406c0.186,0.062,0.385-0.029,0.294,0l3.822-1.406l3.83,1.406c0.26,0.1,0.543-0.08,0.543-0.369V5.506C18.342,5.344,18.242,5.199,18.092,5.137 M5.633,14.221l-3.181,1.15V5.776l3.181-1.15V14.221z M9.602,15.371l-3.173-1.15V4.626l3.173,1.15V15.371z M13.57,14.221l-3.173,1.15V5.776l3.173-1.15V14.221z M17.547,15.371l-3.182-1.15V4.626l3.182,1.15V15.371z\"></path>\n        </symbol>\n        <symbol id=\"current\" viewBox=\"0 0 20 20\">\n            <path d=\"M17.896,12.706v-0.005v-0.003L15.855,2.507c-0.046-0.24-0.255-0.413-0.5-0.413H4.899c-0.24,0-0.447,0.166-0.498,0.4L2.106,12.696c-0.008,0.035-0.013,0.071-0.013,0.107v4.593c0,0.28,0.229,0.51,0.51,0.51h14.792c0.28,0,0.51-0.229,0.51-0.51v-4.593C17.906,12.77,17.904,12.737,17.896,12.706 M5.31,3.114h9.625l1.842,9.179h-4.481c-0.28,0-0.51,0.229-0.51,0.511c0,0.703-1.081,1.546-1.785,1.546c-0.704,0-1.785-0.843-1.785-1.546c0-0.281-0.229-0.511-0.51-0.511H3.239L5.31,3.114zM16.886,16.886H3.114v-3.572H7.25c0.235,1.021,1.658,2.032,2.75,2.032c1.092,0,2.515-1.012,2.749-2.032h4.137V16.886z\"></path>\n        </symbol>\n    </svg>\n}","import s from './App.module.scss'\nimport { AppStateType, store } from './redux/store'\nimport { Route, HashRouter, Switch, Redirect } from 'react-router-dom'\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { onGetAllCurrencies } from './redux/currenciesReducer'\nimport { useEffect } from 'react'\nimport { Preloader } from './components/Common/Preloader/Preloader'\nimport { Current } from './components/Current/Current'\nimport { List } from './components/List/List'\nimport { Header } from './components/Header/Header'\n\nexport const App: React.FC = () => {\n  const allCurrencies = useSelector((state: AppStateType) => state.currencies.allCurrencies)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(onGetAllCurrencies())\n  }, [dispatch])\n\n  return <div className={s.app}>\n    {allCurrencies.length === 0 ? <Preloader /> : <>\n      <Header />\n      <main className={s.main}>\n        <Switch>\n          <Route path=\"/current\" render={() => <Current />} />\n          <Route path=\"/list\" render={() => <List />} />\n          <Route exact path=\"*\" render={() => <Redirect to={'/current'} />} />\n        </Switch>\n      </main>\n    </>}\n  </div>\n}\n\nexport const CurrenciesApp: React.FC = () => {\n  return <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { CurrenciesApp } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrenciesApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}